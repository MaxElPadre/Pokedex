{"ast":null,"code":"var _jsxFileName = \"/Users/maxencemouchard/Desktop/pokedex/src/App.js\";\n// import React from 'react';\n// import './App.css';\n// function callApi(){\n//   // Github fetch library : https://github.com/github/fetch\n//   // Call the API page\n//   fetch('https://www.reddit.com/r/reactjs.json')\n//   .then((result) => {\n//     // Get the result\n//     // If we want text, call result.text()\n//     return result.text();\n//   }).then((jsonResult) => {\n//     // Do something with the result\n//     console.log(jsonResult);\n//   })\n// }\n// function searchPokemon(event) {\n//   let pokemon = event.target.value;\n//   console.log(pokemon);\n// }\n// function App() {\n//   return (\n//     <div className=\"App\">\n//         <form>\n//           Pokemon: <input type=\"text\" onChange={searchPokemon(e)}/>\n//         </form>\n//     </div>\n//   );\n// }\n// export default App;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      changedValue: '',\n      submittedValue: []\n    };\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeText(event) {\n    this.setState({\n      changedValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    var sel = document.getElementById('select');\n    var index = Number(sel.value);\n\n    if (index === 0) {\n      this.setState(state => state.submittedValue.push(state.changedValue));\n    } else {\n      this.setState(state => state.submittedValue.splice(index - 1, 0, state.changedValue));\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    const listOptions = this.state.submittedValue.map((element, index) => React.createElement(\"option\", {\n      value: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, element));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Insertion: \", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.changedValue,\n      onChange: this.handleChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"Position: \", React.createElement(\"select\", {\n      id: \"select\",\n      value: this.state.changedSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"en dernier\"), listOptions), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"ajouter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.submittedValue.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" \", item, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/maxencemouchard/Desktop/pokedex/src/App.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","changedValue","submittedValue","handleChangeText","bind","handleSubmit","event","setState","target","value","sel","document","getElementById","index","Number","push","splice","preventDefault","render","listOptions","map","element","changedSelect","item"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,cAAc,EAAE;AAFP,KAAb;AAKA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,gBAAgB,CAACG,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,YAAY,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAA7B,KAAd;AACH;;AAEDJ,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,QAAII,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAV;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACJ,GAAG,CAACD,KAAL,CAAlB;;AACA,QAAGI,KAAK,KAAK,CAAb,EAAgB;AACZ,WAAKN,QAAL,CAAcP,KAAK,IAAMA,KAAK,CAACE,cAAN,CAAqBa,IAArB,CAA0Bf,KAAK,CAACC,YAAhC,CAAzB;AACH,KAFD,MAGK;AACD,WAAKM,QAAL,CAAcP,KAAK,IAAMA,KAAK,CAACE,cAAN,CAAqBc,MAArB,CAA4BH,KAAK,GAAC,CAAlC,EAAqC,CAArC,EAAwCb,KAAK,CAACC,YAA9C,CAAzB;AACH;;AACDK,IAAAA,KAAK,CAACW,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KAAKnB,KAAL,CAAWE,cAAX,CAA0BkB,GAA1B,CAA8B,CAACC,OAAD,EAAUR,KAAV,KAAoB;AAAQ,MAAA,KAAK,EAAEA,KAAK,GAAC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBQ,OAAzB,CAAlD,CAApB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACe;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,YAArC;AAAmD,MAAA,QAAQ,EAAE,KAAKE,gBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADf,gBAEc;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWsB,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADM,EAELH,WAFK,CAFd,EAMI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWE,cAAX,CAA0BkB,GAA1B,CAA8BG,IAAI,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMA,IAAN,MADH,CADL,CATJ,CADJ;AAiBH;;AA/C6B","sourcesContent":["// import React from 'react';\n// import './App.css';\n\n// function callApi(){\n//   // Github fetch library : https://github.com/github/fetch\n//   // Call the API page\n//   fetch('https://www.reddit.com/r/reactjs.json')\n//   .then((result) => {\n//     // Get the result\n//     // If we want text, call result.text()\n//     return result.text();\n//   }).then((jsonResult) => {\n//     // Do something with the result\n//     console.log(jsonResult);\n//   })\n// }\n\n// function searchPokemon(event) {\n//   let pokemon = event.target.value;\n//   console.log(pokemon);\n// }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//         <form>\n//           Pokemon: <input type=\"text\" onChange={searchPokemon(e)}/>\n//         </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            changedValue: '',\n            submittedValue: [],\n        };\n\n        this.handleChangeText = this.handleChangeText.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangeText(event) {\n        this.setState({ changedValue: event.target.value });\n    }\n\n    handleSubmit(event) {\n        var sel = document.getElementById('select');\n        var index = Number(sel.value);\n        if(index === 0) {\n            this.setState(state => ( state.submittedValue.push(state.changedValue)));\n        }\n        else {\n            this.setState(state => ( state.submittedValue.splice(index-1, 0, state.changedValue)));\n        }\n        event.preventDefault()\n    }\n\n    render() {\n        const listOptions = this.state.submittedValue.map((element, index) => <option value={index+1}>{element}</option>);\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    Insertion: <input type=\"text\" value={this.state.changedValue} onChange={this.handleChangeText} />\n                    Position: <select id=\"select\" value={this.state.changedSelect}>\n                        <option value=\"0\">en dernier</option>\n                        {listOptions}\n                    </select>\n                    <input type=\"submit\" value=\"ajouter\"/>\n                </form>\n                <ul>\n                    {this.state.submittedValue.map(item =>\n                        <li> {item} </li>\n                    )}\n                </ul>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}