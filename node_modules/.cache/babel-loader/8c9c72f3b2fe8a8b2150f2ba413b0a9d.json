{"ast":null,"code":"var _jsxFileName = \"/Users/maxencemouchard/Desktop/pokedex/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonResult => {\n      // Do something with the result\n      this.setState({\n        jsonPokemon: jsonResult\n      });\n    });\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonResult => {\n      // Do something with the result\n      let pokemonDetails = [];\n      let type = [];\n      let baseStats = [];\n      let typeStats = [];\n\n      for (var i = 0; i < jsonResult.types.length; i++) {\n        type.push({\n          name: jsonResult.types[i].type.name,\n          url: jsonResult.types[i].type.url\n        });\n      } // write each stats in array\n\n\n      for (var x = 0; x < jsonResult.stats.length; x++) {\n        baseStats.push({\n          name: jsonResult.stats[x].stat.name,\n          value: jsonResult.stats[x].base_stat\n        });\n      }\n\n      for (var y = 0; y < baseStats.length; y++) {} // Push all data in array\n\n\n      pokemonDetails.push(name, type, jsonResult.sprites.front_default, baseStats);\n      this.setState({\n        listPokemonDetails: pokemonDetails\n      });\n    });\n  }\n\n  averageType(arrayStats) {}\n\n  searchPokemon(event) {\n    if (this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n\n    const pokemon = event.target.value;\n\n    if (pokemon.length >= 2) {\n      let newArrayPokemon = [];\n\n      for (var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if (this.state.jsonPokemon.results[i].name.includes(pokemon)) newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n\n      this.setState({\n        listPokemon: newArrayPokemon\n      });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"SearchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Pokemon: \", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"InputForm\",\n      placeholder: \"Chercher votre pok\\xE9mon...\",\n      onChange: this.searchPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"PokemonList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.listPokemon.map(item => React.createElement(\"li\", {\n      key: item.name,\n      className: \"PokemonName\",\n      onClick: this.detailsThisPokemon,\n      \"data-name\": item.name,\n      \"data-url\": item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", item.name, \" \"))), this.state.listPokemonDetails.length > 0 && React.createElement(\"div\", {\n      className: \"PokemonDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PokemonImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.listPokemonDetails[2],\n      alt: \"Indisponible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PokemonInfos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.listPokemonDetails[0]), React.createElement(\"div\", {\n      className: \"Types\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Type(s):\", React.createElement(\"ul\", {\n      className: \"UlTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.listPokemonDetails[1].map(item => React.createElement(\"li\", {\n      key: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \", item.name, \" \"))))), React.createElement(\"div\", {\n      className: \"PokemonStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Stats de base:\", React.createElement(\"ul\", {\n      className: \"UlBaseStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.listPokemonDetails[3].map(item => React.createElement(\"li\", {\n      key: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" \", item.name + ': ' + item.value, \" \"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maxencemouchard/Desktop/pokedex/src/App.js"],"names":["React","App","Component","constructor","props","state","jsonPokemon","listPokemon","listPokemonDetails","searchPokemon","bind","detailsThisPokemon","callAllPokemon","fetch","then","result","json","jsonResult","setState","callPokemonDetails","url","name","pokemonDetails","type","baseStats","typeStats","i","types","length","push","x","stats","stat","value","base_stat","y","sprites","front_default","averageType","arrayStats","event","pokemon","target","newArrayPokemon","results","includes","currentTarget","dataset","render","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonResult) => {\n      // Do something with the result\n      this.setState({ jsonPokemon: jsonResult });\n    })\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonResult) => {\n      // Do something with the result\n      let pokemonDetails = [];\n      let type = [];\n      let baseStats = [];\n      let typeStats = [];\n      for(var i = 0; i < jsonResult.types.length; i++) {\n        type.push({name: jsonResult.types[i].type.name, url: jsonResult.types[i].type.url});\n      }\n      // write each stats in array\n      for(var x = 0; x < jsonResult.stats.length; x++) {\n        baseStats.push({name: jsonResult.stats[x].stat.name, value: jsonResult.stats[x].base_stat});\n      }\n      for(var y = 0; y < baseStats.length; y++) {\n        \n      }\n\n      // Push all data in array\n      pokemonDetails.push(name, type, jsonResult.sprites.front_default, baseStats)\n      this.setState({ listPokemonDetails: pokemonDetails });\n    })\n  }\n\n  averageType(arrayStats) {\n\n  }\n\n  searchPokemon(event) {\n    if(this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n    const pokemon = event.target.value;\n    if(pokemon.length >= 2) {\n      let newArrayPokemon = [];\n      for(var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if((this.state.jsonPokemon.results[i].name).includes(pokemon))\n          newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n      this.setState({ listPokemon: newArrayPokemon });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form className=\"SearchForm\">\n          Pokemon: <input type=\"text\" className=\"InputForm\" placeholder=\"Chercher votre pokémon...\" onChange={ this.searchPokemon }/>\n        </form>\n        <ul className=\"PokemonList\">\n          { this.state.listPokemon.map(item => <li key={ item.name } className=\"PokemonName\" onClick={this.detailsThisPokemon} data-name={item.name} data-url={item.url}> {item.name} </li>) }\n        </ul>\n        { this.state.listPokemonDetails.length > 0 &&\n          <div className=\"PokemonDetails\">\n            <div className=\"PokemonImage\">\n              <img src={this.state.listPokemonDetails[2]} alt=\"Indisponible\"/>\n            </div>\n            <div className=\"PokemonInfos\">\n              <div className=\"Name\">\n                { this.state.listPokemonDetails[0] }\n              </div>\n              <div className=\"Types\">\n                Type(s): \n                <ul className=\"UlTypes\">\n                  { this.state.listPokemonDetails[1].map(item => <li key={ item.name }> {item.name} </li>) }\n                </ul>\n              </div>\n            </div>\n            <div className=\"PokemonStats\">\n              Stats de base:\n              <ul className=\"UlBaseStats\">\n                { this.state.listPokemonDetails[3].map(item => <li key={ item.name }> {item.name + ': ' + item.value} </li>) }\n              </ul>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}