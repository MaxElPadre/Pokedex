{"ast":null,"code":"var _jsxFileName = \"/Users/maxencemouchard/Desktop/pokedex/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonResult => {\n      // Do something with the result\n      this.setState({\n        jsonPokemon: jsonResult\n      });\n    });\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonPokemon => {\n      // Do something with the result\n      let type = [];\n      let baseStats = [];\n      this.setState({\n        listPokemonDetails: [name, type, '', []]\n      }); //Call all types of this pokemon\n\n      for (let i = 0; i < jsonPokemon.types.length; i++) {\n        fetch(jsonPokemon.types[i].type.url).then(result => {\n          return result.json();\n        }).then(jsonResult => {\n          let nbPokemon = jsonResult.pokemon.length;\n          let hp = 0;\n          let attack = 0;\n          let speed = 0;\n          let defense = 0;\n          let special_attack = 0;\n          let special_defense = 0; //Call all pokemons details of this type\n\n          for (let x = 0; x < nbPokemon; x++) {\n            fetch(jsonResult.pokemon[i].pokemon.url).then(result => {\n              return result.json();\n            }).then(jsonOtherPokemon => {\n              for (let y = 0; y < jsonOtherPokemon.stats.length; y++) {\n                let name = jsonOtherPokemon.stats[y].stat.name;\n                if (name === 'hp') hp += jsonOtherPokemon.stats[y].base_stat;else if (name === 'attack') attack += jsonOtherPokemon.stats[y].base_stat;else if (name === 'speed') speed += jsonOtherPokemon.stats[y].base_stat;else if (name === 'defense') defense += jsonOtherPokemon.stats[y].base_stat;else if (name === 'special-attack') special_attack += jsonOtherPokemon.stats[y].base_stat;else if (name === 'special-defense') special_defense += jsonOtherPokemon.stats[y].base_stat;\n              }\n\n              let obj = [{\n                name: 'hp',\n                value: hp / nbPokemon\n              }, {\n                name: 'attack',\n                value: attack / nbPokemon\n              }, {\n                name: 'speed',\n                value: speed / nbPokemon\n              }, {\n                name: 'defense',\n                value: defense / nbPokemon\n              }, {\n                name: 'special-attack',\n                value: special_attack / nbPokemon\n              }, {\n                name: 'special-defense',\n                value: special_defense / nbPokemon\n              }];\n              this.setState(state => state.listPokemonDetails[1].splice(i, 1, {\n                name: jsonPokemon.types[i].type.name,\n                stats: obj\n              }));\n            });\n          }\n        });\n      }\n\n      console.log(this.state.listPokemonDetails); // write each stats in array\n\n      for (var x = 0; x < jsonPokemon.stats.length; x++) {\n        baseStats.push({\n          name: jsonPokemon.stats[x].stat.name,\n          value: jsonPokemon.stats[x].base_stat\n        });\n      } // Push all data in array\n\n\n      this.setState(state => state.listPokemonDetails.splice(2, 1, jsonPokemon.sprites.front_default));\n      this.setState(state => state.listPokemonDetails.splice(3, 1, baseStats));\n    });\n  }\n\n  searchPokemon(event) {\n    if (this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n\n    const pokemon = event.target.value;\n\n    if (pokemon.length >= 2) {\n      let newArrayPokemon = [];\n\n      for (var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if (this.state.jsonPokemon.results[i].name.includes(pokemon)) newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n\n      this.setState({\n        listPokemon: newArrayPokemon\n      });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"SearchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Pokemon: \", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"InputForm\",\n      placeholder: \"Chercher votre pok\\xE9mon...\",\n      onChange: this.searchPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"PokemonList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.listPokemon.map(item => React.createElement(\"li\", {\n      key: item.name,\n      className: \"PokemonName\",\n      onClick: this.detailsThisPokemon,\n      \"data-name\": item.name,\n      \"data-url\": item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" \", item.name, \" \"))), this.state.listPokemonDetails.length > 0 && React.createElement(\"div\", {\n      className: \"PokemonDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PokemonImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.listPokemonDetails[2],\n      alt: \"Indisponible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PokemonInfos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.listPokemonDetails[0]), React.createElement(\"div\", {\n      className: \"Types\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"UlTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Type(s):\", this.state.listPokemonDetails[1].map(item => React.createElement(\"li\", {\n      key: item.name,\n      className: \"LiTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" \", item.name, \" \"))))), React.createElement(\"div\", {\n      className: \"PokemonStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"UlBaseStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Stats de base:\", this.state.listPokemonDetails[3].map(item => React.createElement(\"li\", {\n      key: item.name,\n      className: \"LiBaseStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \" \", item.name + ': ' + item.value, \" \"))), this.state.listPokemonDetails[1].map(type => React.createElement(\"ul\", {\n      key: type.name,\n      className: \"UlTypeStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \" Moyenne du type \", type.name, \" : \", type.stats.map((stats, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      key: type.name + '_' + stats.name,\n      className: \"LiTypeStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \" \", stats.name + ': ' + stats.value), React.createElement(\"div\", {\n      className: \"myProgress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"myBar\",\n      style: {\n        width: this.state.listPokemonDetails[3][index].value + '%;'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))), \" \")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maxencemouchard/Desktop/pokedex/src/App.js"],"names":["React","App","Component","constructor","props","state","jsonPokemon","listPokemon","listPokemonDetails","searchPokemon","bind","detailsThisPokemon","callAllPokemon","fetch","then","result","json","jsonResult","setState","callPokemonDetails","url","name","type","baseStats","i","types","length","nbPokemon","pokemon","hp","attack","speed","defense","special_attack","special_defense","x","jsonOtherPokemon","y","stats","stat","base_stat","obj","value","splice","console","log","push","sprites","front_default","event","target","newArrayPokemon","results","includes","currentTarget","dataset","render","map","item","index","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonResult) => {\n      // Do something with the result\n      this.setState({ jsonPokemon: jsonResult });\n    })\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonPokemon) => {\n      // Do something with the result\n      let type = [];\n      let baseStats = [];\n      this.setState({ listPokemonDetails: [name, type, '', []] });\n\n      //Call all types of this pokemon\n      for(let i = 0; i < jsonPokemon.types.length; i++) {\n        fetch(jsonPokemon.types[i].type.url).then((result) => {\n          return result.json();\n        }).then((jsonResult) => {\n          let nbPokemon = jsonResult.pokemon.length;\n          let hp = 0;\n          let attack = 0;\n          let speed = 0;\n          let defense = 0;\n          let special_attack = 0;\n          let special_defense = 0;\n          //Call all pokemons details of this type\n          for(let x = 0; x < nbPokemon; x++) {\n            fetch(jsonResult.pokemon[i].pokemon.url).then((result) => {\n              return result.json();\n            }).then((jsonOtherPokemon) => {\n              for(let y = 0; y < jsonOtherPokemon.stats.length; y++) {\n                let name = jsonOtherPokemon.stats[y].stat.name;\n                if(name === 'hp') \n                  hp += jsonOtherPokemon.stats[y].base_stat;\n                else if(name === 'attack')\n                  attack += jsonOtherPokemon.stats[y].base_stat;\n                else if(name === 'speed')\n                  speed += jsonOtherPokemon.stats[y].base_stat;\n                else if(name === 'defense')\n                  defense += jsonOtherPokemon.stats[y].base_stat;\n                else if(name === 'special-attack')\n                  special_attack += jsonOtherPokemon.stats[y].base_stat;\n                else if(name === 'special-defense')\n                  special_defense += jsonOtherPokemon.stats[y].base_stat;\n              }\n              let obj = [{name: 'hp', value: hp/nbPokemon }, {name: 'attack', value:attack/nbPokemon}, {name: 'speed', value: speed/nbPokemon}, {name: 'defense', value: defense/nbPokemon }, {name: 'special-attack', value: special_attack/nbPokemon }, {name: 'special-defense', value: special_defense/nbPokemon}];\n              this.setState(state => ( state.listPokemonDetails[1].splice(i, 1, ({name: jsonPokemon.types[i].type.name, stats: obj}))));\n            })\n          }\n        })\n      }\n      console.log(this.state.listPokemonDetails);\n\n      // write each stats in array\n      for(var x = 0; x < jsonPokemon.stats.length; x++) {\n        baseStats.push({name: jsonPokemon.stats[x].stat.name, value: jsonPokemon.stats[x].base_stat});\n      }\n\n      // Push all data in array\n      this.setState(state => ( state.listPokemonDetails.splice(2, 1, jsonPokemon.sprites.front_default)));\n      this.setState(state => ( state.listPokemonDetails.splice(3, 1, baseStats)));\n    })\n  }\n\n  searchPokemon(event) {\n    if(this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n    const pokemon = event.target.value;\n    if(pokemon.length >= 2) {\n      let newArrayPokemon = [];\n      for(var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if((this.state.jsonPokemon.results[i].name).includes(pokemon))\n          newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n      this.setState({ listPokemon: newArrayPokemon });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form className=\"SearchForm\">\n          Pokemon: <input type=\"text\" className=\"InputForm\" placeholder=\"Chercher votre pokémon...\" onChange={ this.searchPokemon }/>\n        </form>\n        <ul className=\"PokemonList\">\n          { this.state.listPokemon.map(item => <li key={ item.name } className=\"PokemonName\" onClick={this.detailsThisPokemon} data-name={item.name} data-url={item.url}> {item.name} </li>) }\n        </ul>\n        { this.state.listPokemonDetails.length > 0 &&\n          <div className=\"PokemonDetails\">\n            <div className=\"PokemonImage\">\n              <img src={this.state.listPokemonDetails[2]} alt=\"Indisponible\"/>\n            </div>\n            <div className=\"PokemonInfos\">\n              <div className=\"Name\">\n                { this.state.listPokemonDetails[0] }\n              </div>\n              <div className=\"Types\">\n                <ul className=\"UlTypes\">\n                Type(s): \n                  { this.state.listPokemonDetails[1].map(item => <li key={ item.name } className='LiTypes'> {item.name} </li>) }\n                </ul>\n              </div>\n            </div>\n            <div className=\"PokemonStats\">\n              <ul className=\"UlBaseStats\">\n              Stats de base:\n                { this.state.listPokemonDetails[3].map(item => <li key={ item.name } className=\"LiBaseStats\"> {item.name + ': ' + item.value} </li>) }\n              </ul>\n                { this.state.listPokemonDetails[1].map(type => <ul key={type.name} className=\"UlTypeStats\"> Moyenne du type {type.name} : {type.stats.map( (stats,index) => <div><li key={type.name+'_'+stats.name} className=\"LiTypeStats\"> {stats.name + ': ' + stats.value}</li><div className=\"myProgress\"><div className=\"myBar\" style={{width: this.state.listPokemonDetails[3][index].value+'%;'}}></div></div></div> )} </ul>) }\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}