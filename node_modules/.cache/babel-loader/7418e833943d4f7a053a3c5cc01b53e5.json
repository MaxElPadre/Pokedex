{"ast":null,"code":"var _jsxFileName = \"/Users/maxencemouchard/Desktop/pokedex/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonResult => {\n      // Do something with the result\n      this.setState({\n        jsonPokemon: jsonResult\n      });\n    });\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonResult => {\n      // Do something with the result\n      let newArrayPokemonDetails = [];\n      let type = [];\n\n      for (var i = 0; i < jsonResult.types.length; i++) {\n        type.push(jsonResult.types[i].type.name);\n      }\n\n      newArrayPokemonDetails.push(name, type, jsonResult.sprites.front_default); // var object = {};\n      // object.name = name;\n      // object.type = type;\n      // object.image = jsonResult.sprites.front_default;\n\n      this.setState({\n        listPokemonDetails: newArrayPokemonDetails\n      });\n    });\n  }\n\n  searchPokemon(event) {\n    if (this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n\n    let pokemon = event.target.value;\n\n    if (pokemon.length >= 2) {\n      let newArrayPokemon = [];\n\n      for (var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if (this.state.jsonPokemon.results[i].name.includes(pokemon)) newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n\n      this.setState({\n        listPokemon: newArrayPokemon\n      });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"SearchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Pokemon: \", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"InputForm\",\n      placeholder: \"Chercher votre pok\\xE9mon...\",\n      onChange: this.searchPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"PokemonList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.listPokemon.map(item => React.createElement(\"li\", {\n      className: \"PokemonName\",\n      onClick: this.detailsThisPokemon,\n      \"data-name\": item.name,\n      \"data-url\": item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \", item.name, \" \"))), React.createElement(\"div\", {\n      className: \"PokemonDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Nom du pok\\xE9mon:\"), React.createElement(\"div\", {\n      className: \"Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"if(this.state.listPokemonDetails.length !== 0) Type(s):\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.listPokemonDetails[1].map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", item, \" \"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maxencemouchard/Desktop/pokedex/src/App.js"],"names":["React","App","Component","constructor","props","state","jsonPokemon","listPokemon","listPokemonDetails","searchPokemon","bind","detailsThisPokemon","callAllPokemon","fetch","then","result","json","jsonResult","setState","callPokemonDetails","url","name","newArrayPokemonDetails","type","i","types","length","push","sprites","front_default","event","pokemon","target","value","newArrayPokemon","results","includes","currentTarget","dataset","render","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonResult) => {\n      // Do something with the result\n      this.setState({ jsonPokemon: jsonResult });\n    })\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonResult) => {\n      // Do something with the result\n      let newArrayPokemonDetails = [];\n      let type = [];\n      for(var i = 0; i < jsonResult.types.length; i++) {\n        type.push(jsonResult.types[i].type.name);\n      }\n      newArrayPokemonDetails.push(name, type, jsonResult.sprites.front_default)\n      // var object = {};\n      // object.name = name;\n      // object.type = type;\n      // object.image = jsonResult.sprites.front_default;\n      this.setState({ listPokemonDetails: newArrayPokemonDetails });\n    })\n  }\n\n  searchPokemon(event) {\n    if(this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n    let pokemon = event.target.value;\n    if(pokemon.length >= 2) {\n      let newArrayPokemon = [];\n      for(var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if((this.state.jsonPokemon.results[i].name).includes(pokemon))\n          newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n      this.setState({ listPokemon: newArrayPokemon });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form className=\"SearchForm\">\n          Pokemon: <input type=\"text\" className=\"InputForm\" placeholder=\"Chercher votre pokémon...\" onChange={ this.searchPokemon }/>\n        </form>\n        <ul className=\"PokemonList\">\n          { this.state.listPokemon.map(item => <li className=\"PokemonName\" onClick={this.detailsThisPokemon} data-name={item.name} data-url={item.url}> {item.name} </li>) }\n        </ul>\n        <div className=\"PokemonDetails\">\n          <div className=\"Name\">\n            Nom du pokémon: \n\n          </div>\n          <div className=\"Type\">\n            if(this.state.listPokemonDetails.length !== 0)\n            Type(s): \n            <ul>\n              { this.state.listPokemonDetails[1].map(item => <li> {item} </li>) }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}