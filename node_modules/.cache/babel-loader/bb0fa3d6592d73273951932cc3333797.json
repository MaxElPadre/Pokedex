{"ast":null,"code":"var _jsxFileName = \"/Users/maxencemouchard/Desktop/pokedex/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { objectTypeAnnotation } from '@babel/types';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonResult => {\n      // Do something with the result\n      this.setState({\n        jsonPokemon: jsonResult\n      });\n    });\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then(result => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then(jsonResult => {\n      // Do something with the result\n      let newArrayPokemonDetails = [];\n      let type = [];\n      let baseStats = [];\n\n      for (var i = 0; i < jsonResult.types.length; i++) {\n        const obj = {\n          name: jsonResult.types[i].type.name,\n          url: jsonResult.types[i].type.url\n        };\n        type.push(obj);\n      }\n\n      for (var x = 0; x < jsonResult.stats.length; x++) {\n        baseStats.push(jsonResult.stats[x].stat.name + ': ' + jsonResult.stats[x].base_stat);\n      }\n\n      newArrayPokemonDetails.push(name, type, jsonResult.sprites.front_default, baseStats);\n      this.setState({\n        listPokemonDetails: newArrayPokemonDetails\n      });\n    });\n  }\n\n  searchPokemon(event) {\n    if (this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n\n    const pokemon = event.target.value;\n\n    if (pokemon.length >= 2) {\n      let newArrayPokemon = [];\n\n      for (var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if (this.state.jsonPokemon.results[i].name.includes(pokemon)) newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n\n      this.setState({\n        listPokemon: newArrayPokemon\n      });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"SearchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Pokemon: \", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"InputForm\",\n      placeholder: \"Chercher votre pok\\xE9mon...\",\n      onChange: this.searchPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"PokemonList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.listPokemon.map(item => React.createElement(\"li\", {\n      key: item.name,\n      className: \"PokemonName\",\n      onClick: this.detailsThisPokemon,\n      \"data-name\": item.name,\n      \"data-url\": item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" \", item.name, \" \"))), this.state.listPokemonDetails.length > 0 && React.createElement(\"div\", {\n      className: \"PokemonDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PokemonImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.listPokemonDetails[2],\n      alt: \"Indisponible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PokemonInfos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.listPokemonDetails[0]), React.createElement(\"div\", {\n      className: \"Types\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Type(s):\", React.createElement(\"ul\", {\n      className: \"UlTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.listPokemonDetails[1].map(item => React.createElement(\"li\", {\n      key: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" \", item.name, \" \"))))), React.createElement(\"div\", {\n      className: \"PokemonStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Stats de base:\", React.createElement(\"ul\", {\n      className: \"UlBaseStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.listPokemonDetails[3].map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", item, \" \"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maxencemouchard/Desktop/pokedex/src/App.js"],"names":["React","objectTypeAnnotation","App","Component","constructor","props","state","jsonPokemon","listPokemon","listPokemonDetails","searchPokemon","bind","detailsThisPokemon","callAllPokemon","fetch","then","result","json","jsonResult","setState","callPokemonDetails","url","name","newArrayPokemonDetails","type","baseStats","i","types","length","obj","push","x","stats","stat","base_stat","sprites","front_default","event","pokemon","target","value","newArrayPokemon","results","includes","currentTarget","dataset","render","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { objectTypeAnnotation } from '@babel/types';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonPokemon: '',\n      listPokemon: [],\n      listPokemonDetails: []\n    };\n    this.searchPokemon = this.searchPokemon.bind(this);\n    this.detailsThisPokemon = this.detailsThisPokemon.bind(this);\n  }\n\n  callAllPokemon() {\n    // Call the API page\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=1000').then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonResult) => {\n      // Do something with the result\n      this.setState({ jsonPokemon: jsonResult });\n    })\n  }\n\n  callPokemonDetails(url, name) {\n    // Call the API page\n    fetch(url).then((result) => {\n      // Get the result\n      // If we want text, call result.text()\n      return result.json();\n    }).then((jsonResult) => {\n      // Do something with the result\n      let newArrayPokemonDetails = [];\n      let type = [];\n      let baseStats = [];\n      for(var i = 0; i < jsonResult.types.length; i++) {\n        const obj = {name: jsonResult.types[i].type.name, url: jsonResult.types[i].type.url};\n        type.push(obj);\n      }\n      for(var x = 0; x < jsonResult.stats.length; x++) {\n        baseStats.push(jsonResult.stats[x].stat.name + ': ' + jsonResult.stats[x].base_stat);\n      }\n      newArrayPokemonDetails.push(name, type, jsonResult.sprites.front_default, baseStats)\n      this.setState({ listPokemonDetails: newArrayPokemonDetails });\n    })\n  }\n\n  searchPokemon(event) {\n    if(this.state.jsonPokemon === '') {\n      this.callAllPokemon();\n    }\n    const pokemon = event.target.value;\n    if(pokemon.length >= 2) {\n      let newArrayPokemon = [];\n      for(var i = 0; i < this.state.jsonPokemon.results.length; i++) {\n        if((this.state.jsonPokemon.results[i].name).includes(pokemon))\n          newArrayPokemon.push(this.state.jsonPokemon.results[i]);\n      }\n      this.setState({ listPokemon: newArrayPokemon });\n    }\n  }\n\n  detailsThisPokemon(event) {\n    this.callPokemonDetails(event.currentTarget.dataset.url, event.currentTarget.dataset.name);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form className=\"SearchForm\">\n          Pokemon: <input type=\"text\" className=\"InputForm\" placeholder=\"Chercher votre pokémon...\" onChange={ this.searchPokemon }/>\n        </form>\n        <ul className=\"PokemonList\">\n          { this.state.listPokemon.map(item => <li key={ item.name } className=\"PokemonName\" onClick={this.detailsThisPokemon} data-name={item.name} data-url={item.url}> {item.name} </li>) }\n        </ul>\n        { this.state.listPokemonDetails.length > 0 &&\n          <div className=\"PokemonDetails\">\n            <div className=\"PokemonImage\">\n              <img src={this.state.listPokemonDetails[2]} alt=\"Indisponible\"/>\n            </div>\n            <div className=\"PokemonInfos\">\n              <div className=\"Name\">\n                { this.state.listPokemonDetails[0] }\n              </div>\n              <div className=\"Types\">\n                Type(s): \n                <ul className=\"UlTypes\">\n                  { this.state.listPokemonDetails[1].map(item => <li key={ item.name }> {item.name} </li>) }\n                </ul>\n              </div>\n            </div>\n            <div className=\"PokemonStats\">\n              Stats de base:\n              <ul className=\"UlBaseStats\">\n                { this.state.listPokemonDetails[3].map(item => <li key={ item }> {item} </li>) }\n              </ul>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}